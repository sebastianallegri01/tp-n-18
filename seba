#include <iostream>
#include <vector>
#include <random>

const int TAM = 10;

void generarNumerosAleatorios(std::vector<int>& vec, int tam) {
    std::random_device rd;
    std::mt19937 mt(rd());
    std::uniform_int_distribution<int> dist(0, 99);

    for (int i = 0; i < tam; i++) {
        vec.push_back(dist(mt));
    }
}

std::vector<int> obtenerNumerosPares(const std::vector<int>& vec) {
    std::vector<int> pares;

    for (int num : vec) {
        if (num % 2 == 0) {
            pares.push_back(num);
        }
    }

    return pares;
}

void mostrarVector(const std::vector<int>& vec) {
    for (int num : vec) {
        std::cout << num << " ";
    }
    std::cout << std::endl;
}

int main() {
    std::vector<int> A;
    std::vector<int> B;

    generarNumerosAleatorios(A, TAM);

    std::cout << "Vector A: ";
    mostrarVector(A);

    B = obtenerNumerosPares(A);

    std::cout << "Vector B (nÃºmeros pares de A): ";
    mostrarVector(B);

    return 0;
}
